services:
  prometheus-backend:
    image: prometheus-backend
    networks:
      - "prometheus_services_net"
    restart: on-failure
    container_name: "prometheus-backend"
    depends_on:
      - postgresql
      - redis
      - seq
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./data/prometheus_services/logs:/app/logs
  
  
  postgresql:
    image: postgres:bullseye
    restart: unless-stopped
    networks:
      - "prometheus_services_net"
    container_name: "prometheus_postgresql"
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      TZ: "GMT+8"
      PGTZ: "GMT+8"
    env_file:
      - .env

  redis:
    networks:
      - "prometheus_services_net"
    restart: unless-stopped
    container_name: "prometheus_redis"
    image: "redis"
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    
  seqcli:
    image: datalust/seqcli:latest
    container_name: "prometheus_seqcli"
    command: apikey create -t newapikey --token ${SEQ_APIKEY} -s ${SEQ_URL}
    depends_on:
      - seq
    restart: on-failure:5
    networks:
      - "prometheus_services_net"
    
  seq:
    image: datalust/seq:latest
    container_name: "prometheus_seq"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=${SEQ_ADMINPASSWORD}
    volumes:
      - ./data/seq/data:/data
    ports:
      - "5341:80"
    networks:
      - "prometheus_services_net"

networks:
  prometheus_services_net:
    driver: bridge
    